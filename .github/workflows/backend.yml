name: Let's Code ADA Pipeline - Backend

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  WORK_DIR: "./backend/app"
  ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
  ECR_REPOSITORY: letscodebyadd-backend
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-backend:
    name: "[Backend] Build e Testes"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup da JDK
        uses: actions/setup-java@v3
        with:
          cache: maven
          distribution: adopt
          java-version: '11'

      - name: Setup do Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.9.1
           
      - name: Build da Aplicação
        working-directory: ${{ env.WORK_DIR }}
        run: mvn clean package

      - name: Testes da Aplicação
        working-directory: ${{ env.WORK_DIR }}
        run: mvn test

      - name: Upload do Artefato
        uses: actions/upload-artifact@v3
        with:
          name: letscodebyada-bck
          path: "${{ env.WORK_DIR }}/target/*.jar"

  package-backend:
    name: "[Backend] Geração de Imagem Docker"
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download do Artefato
      uses: actions/download-artifact@v3
      with:
        name: letscodebyada-bck
        path: "${{ env.WORK_DIR }}/target"

    - name: Build Imagem do Docker
      uses: docker/build-push-action@v2
      with:
        context: "${{ env.WORK_DIR }}/Dockerfile"
        push: true
        tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        builder: docker.io/docker/dockerfile:1.2.1

    - name: Configurando Credenciais da AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

    - name: Enviando imagem para o ECR
      run: |
        docker tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }} ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest


